{"ast":null,"code":"var _jsxFileName = \"/Users/user/Desktop/react/webAnimationTest/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport React from 'react';\nimport WomanLongAnim from './long.mp4';\nimport WomanHalfAnim from './half.mp4';\nimport SunAnim from './sun.mp4';\nimport CloudsAnim from './clouds.mp4';\nimport RainAnim from './rain.mp4';\nimport axios from 'axios'; // axiosで通信を行う\n\nimport { useForm } from \"react-hook-form\";\nimport ReactPlayer from \"react-player\";\nimport Button from '@material-ui/core/Button';\nimport MenuOpenIcon from '@material-ui/icons/MenuOpen';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  // apiの情報をstate管理\n  const [statusName, setName] = React.useState('');\n  const [statusWeather, setWeather] = React.useState('');\n  const [city, setCity] = React.useState('Tokyo');\n  const [temperature, setTemp] = React.useState();\n  const [maxTemperature, setMaxTemp] = React.useState();\n  const [minTemperature, setMinTemp] = React.useState();\n  const [closeNav, setCloseNav] = React.useState(false);\n  const topUrl = 'https://api.openweathermap.org/data/2.5/weather?q=';\n  const bottomUrl = ',jp&appid=ab772c4cd38076eff2acf4701e560be6'; // react-hook-form\n\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm();\n\n  const onSubmit = data => {\n    setCity(data.exampleRequired);\n  }; // React.useEffect(() => { ... }, []);を入れることでaxiosの繰り返し処理を止めることができる\n\n\n  React.useEffect(() => {\n    // axios.get(URL)でapiからgetしてjsonを取得\n    axios.get(topUrl + city + bottomUrl) // thenで成功した場合の処理をかける\n    .then(response => {\n      const temp = parseInt((response.data.main.temp - 273.15) * 10, 10) / 10;\n      const maxTemp = parseInt((response.data.main.temp_max - 273.15) * 10, 10) / 10;\n      const minTemp = parseInt((response.data.main.temp_min - 273.15) * 10, 10) / 10;\n      console.log(response.data.name);\n      setName(response.data.name);\n      setWeather(response.data.weather[0].main);\n      setTemp(temp);\n      setMaxTemp(maxTemp);\n      setMinTemp(minTemp); // catchでエラー時の挙動を定義する\n    }).catch(err => {\n      console.log('err:', err);\n    }); // 第二引数に[]を入れるとaxiosの繰り返し処理がなくなる\n  });\n\n  const navClick = () => {\n    setCloseNav(!closeNav);\n  };\n\n  const navState = closeNav ? 'closeNav' : 'openNav';\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: cityName,\n        children: statusName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ReactPlayer, {\n        className: \"womanAnim\",\n        url: maxTemperature >= 25 ? WomanHalfAnim : WomanLongAnim,\n        controls: false,\n        loop: true,\n        config: {\n          file: {\n            attributes: {\n              autoPlay: true,\n              muted: true\n            }\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: statusWeather == 'Clear' ? 'fadeInEffect' : ' ',\n        children: /*#__PURE__*/_jsxDEV(ReactPlayer, {\n          className: 'EffectAnim Clear',\n          url: SunAnim,\n          controls: false,\n          loop: true,\n          config: {\n            file: {\n              attributes: {\n                autoPlay: true,\n                muted: true\n              }\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: statusWeather == 'Clouds' ? 'fadeInEffect' : ' ',\n        children: /*#__PURE__*/_jsxDEV(ReactPlayer, {\n          className: 'EffectAnim Clouds',\n          url: CloudsAnim,\n          controls: false,\n          loop: true,\n          config: {\n            file: {\n              attributes: {\n                autoPlay: true,\n                muted: true\n              }\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: statusWeather == 'Rain' ? 'fadeInEffect' : ' ',\n        children: /*#__PURE__*/_jsxDEV(ReactPlayer, {\n          className: 'EffectAnim Rain',\n          url: RainAnim,\n          controls: false,\n          loop: true,\n          config: {\n            file: {\n              attributes: {\n                autoPlay: true,\n                muted: true\n              }\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"weatherNav\" + ' ' + navState,\n        children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: navClick,\n          children: /*#__PURE__*/_jsxDEV(MenuOpenIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 38\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"\\u65E5\\u672C\\u306E\\u90FD\\u5E02\\u3092\\u691C\\u7D22\\u3067\\u304D\\u307E\\u3059\\u3002\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 13\n          }, this), \"\\u30A2\\u30EB\\u30D5\\u30A1\\u30D9\\u30C3\\u30C8\\u3067\\u3054\\u5165\\u529B\\u304F\\u3060\\u3055\\u3044\\u3002\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit(onSubmit),\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"inputTxt\",\n            placeholder: \"\\u4F8B)Tokyo, Osaka etc..\",\n            ...register(\"exampleRequired\", {\n              required: true\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"btn-radius-solid\",\n            type: \"submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 15\n          }, this), errors.exampleRequired && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"\\u30D5\\u30A9\\u30FC\\u30E0\\u306B\\u5165\\u529B\\u3055\\u308C\\u3066\\u3044\\u307E\\u305B\\u3093\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 42\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: statusName,\n          children: [\"\\u5834\\u6240:\", statusName]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\"\\u5929\\u6C17:\", statusWeather]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\"\\u73FE\\u5728\\u306E\\u6C17\\u6E29:\", temperature, \"\\u2103\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\"\\u6700\\u9AD8\\u6C17\\u6E29:\", maxTemperature, \"\\u2103\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\"\\u6700\\u4F4E\\u6C17\\u6E29:\", minTemperature, \"\\u2103\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(App, \"QG03vhiGHhKxFYmDlMwQIdkwypY=\", false, function () {\n  return [useForm];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/user/Desktop/react/webAnimationTest/src/App.js"],"names":["React","WomanLongAnim","WomanHalfAnim","SunAnim","CloudsAnim","RainAnim","axios","useForm","ReactPlayer","Button","MenuOpenIcon","App","statusName","setName","useState","statusWeather","setWeather","city","setCity","temperature","setTemp","maxTemperature","setMaxTemp","minTemperature","setMinTemp","closeNav","setCloseNav","topUrl","bottomUrl","register","handleSubmit","formState","errors","onSubmit","data","exampleRequired","useEffect","get","then","response","temp","parseInt","main","maxTemp","temp_max","minTemp","temp_min","console","log","name","weather","catch","err","navClick","navState","cityName","file","attributes","autoPlay","muted","required"],"mappings":"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","sourcesContent":["import './App.css';\nimport React from 'react';\nimport WomanLongAnim from './long.mp4'\nimport WomanHalfAnim from './half.mp4'\nimport SunAnim from './sun.mp4'\nimport CloudsAnim from './clouds.mp4'\nimport RainAnim from './rain.mp4'\nimport axios from 'axios';// axiosで通信を行う\nimport { useForm } from \"react-hook-form\";\nimport ReactPlayer from \"react-player\";\nimport Button from '@material-ui/core/Button';\nimport MenuOpenIcon from '@material-ui/icons/MenuOpen';\n\nfunction App() {\n  // apiの情報をstate管理\n  const [statusName, setName] = React.useState('');\n  const [statusWeather, setWeather] = React.useState('');\n  const [city, setCity] = React.useState('Tokyo');\n  const [temperature, setTemp] = React.useState();\n  const [maxTemperature, setMaxTemp] = React.useState();\n  const [minTemperature, setMinTemp] = React.useState();\n  const [closeNav, setCloseNav] = React.useState(false);\n  const topUrl = 'https://api.openweathermap.org/data/2.5/weather?q=';\n  const bottomUrl = ',jp&appid=ab772c4cd38076eff2acf4701e560be6';\n  // react-hook-form\n  const { register, handleSubmit, formState: { errors } } = useForm();\n  const onSubmit = data => {\n    setCity(data.exampleRequired);\n  }\n\n  // React.useEffect(() => { ... }, []);を入れることでaxiosの繰り返し処理を止めることができる\n  React.useEffect(() => {\n      // axios.get(URL)でapiからgetしてjsonを取得\n      axios.get(topUrl + city + bottomUrl)\n      // thenで成功した場合の処理をかける\n      .then(response => {\n        const temp = parseInt((response.data.main.temp - 273.15) * 10, 10) / 10;\n        const maxTemp = parseInt((response.data.main.temp_max - 273.15) * 10, 10) / 10;\n        const minTemp = parseInt((response.data.main.temp_min - 273.15) * 10, 10) / 10;\n        console.log(response.data.name);\n        setName(response.data.name);\n        setWeather(response.data.weather[0].main);\n        setTemp(temp);\n        setMaxTemp(maxTemp);\n        setMinTemp(minTemp);\n        // catchでエラー時の挙動を定義する\n      }).catch(err => {\n        console.log('err:', err);\n      });\n      // 第二引数に[]を入れるとaxiosの繰り返し処理がなくなる\n    });\n\n    const navClick = () => {\n      setCloseNav(!closeNav);\n    }\n    const navState = closeNav?'closeNav': 'openNav';\n  return (\n    <>\n      {/* woman animation */}\n      <div className=\"App\">\n        <h1 className={cityName}>{statusName}</h1>\n        {/* womanAnimation */}\n        <ReactPlayer\n        className=\"womanAnim\"\n        url={(maxTemperature >= 25)?WomanHalfAnim:WomanLongAnim}\n        controls={false}\n        loop\n        config={{ file: { attributes: {\n          autoPlay: true,\n          muted: true\n        }}}}\n      />\n\n        {/* clear effects */}\n        <div className={(statusWeather == 'Clear')?'fadeInEffect':' '}>\n          <ReactPlayer\n          className={'EffectAnim Clear'}\n          url={SunAnim}\n          controls={false}\n          loop\n          config={{ file: { attributes: {\n            autoPlay: true,\n            muted: true\n          }}}}\n          />\n        </div>\n\n        {/* clouds effects */}\n        <div className={(statusWeather == 'Clouds')?'fadeInEffect':' '}>       \n          <ReactPlayer\n          className={'EffectAnim Clouds'}\n          url={CloudsAnim}\n          controls={false}\n          loop\n          config={{ file: { attributes: {\n            autoPlay: true,\n            muted: true\n          }}}}\n          />\n        </div>\n\n        {/* rain effects */}\n        <div className={(statusWeather == 'Rain')?'fadeInEffect':' '}>\n          <ReactPlayer\n          className={'EffectAnim Rain'}\n          url={RainAnim}\n          controls={false}\n          loop\n          config={{ file: { attributes: {\n            autoPlay: true,\n            muted: true\n          }}}}\n          />\n        </div>\n\n        {/* サイドバー */}\n        <div className={\"weatherNav\" + ' ' + navState}>\n          <br></br>\n          <br></br>\n          <Button onClick={navClick}><MenuOpenIcon /></Button>\n            <p>日本の都市を検索できます。\n            <br></br>アルファベットでご入力ください。\n            </p>\n            <form onSubmit={handleSubmit(onSubmit)}>\n              {/* include validation with required or other standard HTML validation rules */}\n              <input className=\"inputTxt\" placeholder=\"例)Tokyo, Osaka etc..\" {...register(\"exampleRequired\", { required: true })} />\n              {/* errors will return when field validation fails  */}\n              <input className=\"btn-radius-solid\" type=\"submit\" />\n              {errors.exampleRequired && <p>フォームに入力されていません</p>}\n            </form>\n\n            <h1 className={statusName}>場所:{statusName}</h1>\n            <h1>天気:{statusWeather}</h1>\n            <h1>現在の気温:{temperature}℃</h1>\n            <h1>最高気温:{maxTemperature}℃</h1>\n            <h1>最低気温:{minTemperature}℃</h1>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}