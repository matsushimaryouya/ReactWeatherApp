{"ast":null,"code":"var _jsxFileName = \"/Users/user/Desktop/react/webAnimationTest/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport React from 'react';\nimport WomanLongAnim from './long.mp4';\nimport WomanHalfAnim from './half.mp4';\nimport SunAnim from './sun.mp4';\nimport CloudsAnim from './clouds.mp4';\nimport RainAnim from './rain.mp4'; // axiosで通信を行う\n\nimport axios from 'axios';\nimport { useForm } from \"react-hook-form\";\nimport ReactPlayer from \"react-player\"; // Drawer\n\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport Button from '@material-ui/core/Button';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuOpenIcon from '@material-ui/icons/MenuOpen';\nimport CancelPresentationIcon from '@material-ui/icons/CancelPresentation';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles({\n  list: {\n    width: 250\n  },\n  fullList: {\n    width: 'auto'\n  }\n}); // function TemporaryDrawer(props) {\n//   const classes = useStyles();\n//   const [state, setState] = React.useState({right: true});\n//   const toggleDrawer = (anchor, open) => (event) => {\n//     if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n//       return;\n//     }\n//     setState({ ...state, [anchor]: open });\n//   };\n//   const list = (anchor) => (\n//     <div\n//       className={clsx(classes.list, {\n//         [classes.fullList]: anchor === 'top' || anchor === 'bottom',\n//       })}\n//       role=\"presentation\"\n//       onClick={toggleDrawer(anchor, false)}\n//       onKeyDown={toggleDrawer(anchor, false)}\n//     >\n//       <List>\n//           <ListItem button>\n//             <ListItemText primary={'item name'} />\n//           </ListItem>\n//           <h1 className={props.statusName}>場所:{props.statusName}</h1>\n//           <h1>天気:{props.statusWeather}</h1>\n//           <h1>現在の気温:{props.temperature}℃</h1>\n//           <h1>最高気温:{props.maxTemperature}℃</h1>\n//           <h1>最低気温:{props.minTemperature}℃</h1>\n//       </List>\n//     </div>\n//   );\n//   return (\n//     <div className=\"weatherTopNav\">\n//       {['right'].map((anchor) => (\n//         <React.Fragment key={anchor}>\n//           <Button onClick={toggleDrawer(anchor, true)}><MenuOpenIcon /></Button>\n//           <Drawer className=\"toggleDrawer\" anchor={anchor} open={state[anchor]} onClose={toggleDrawer(anchor, false)}>\n//             <div className=\"closeBtn\" onClick={toggleDrawer(anchor, false)}><CancelPresentationIcon /></div>\n//             {list(anchor)}\n//           </Drawer>\n//         </React.Fragment>\n//       ))}\n//     </div>\n//   );\n// }\n// API通信Getのやり方（axiosを使用）\n\nfunction App() {\n  _s();\n\n  // apiの情報をstate管理\n  const [statusName, setName] = React.useState('');\n  const [statusWeather, setWeather] = React.useState('');\n  const [city, setCity] = React.useState('Tokyo');\n  const [temperature, setTemp] = React.useState();\n  const [maxTemperature, setMaxTemp] = React.useState();\n  const [minTemperature, setMinTemp] = React.useState();\n  const topUrl = 'https://api.openweathermap.org/data/2.5/weather?q=';\n  const bottomUrl = ',jp&appid=ab772c4cd38076eff2acf4701e560be6'; // react-hook-form\n\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm();\n\n  const onSubmit = data => {\n    setCity(data.exampleRequired);\n  }; // React.useEffect(() => { ... }, []);を入れることでaxiosの繰り返し処理を止めることができる\n\n\n  React.useEffect(() => {\n    // axios.get(URL)でapiからgetしてjsonを取得\n    axios.get(topUrl + city + bottomUrl) // thenで成功した場合の処理をかける\n    .then(response => {\n      const temp = parseInt((response.data.main.temp - 273.15) * 10, 10) / 10;\n      const maxTemp = parseInt((response.data.main.temp_max - 273.15) * 10, 10) / 10;\n      const minTemp = parseInt((response.data.main.temp_min - 273.15) * 10, 10) / 10;\n      console.log(response.data.name);\n      setName(response.data.name);\n      setWeather(response.data.weather[0].main);\n      setTemp(temp);\n      setMaxTemp(maxTemp);\n      setMinTemp(minTemp); // catchでエラー時の挙動を定義する\n    }).catch(err => {\n      console.log('err:', err);\n    }); // 第二引数に[]を入れるとaxiosの繰り返し処理がなくなる\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(ReactPlayer, {\n        className: \"womanAnim\",\n        url: maxTemperature >= 25 ? WomanHalfAnim : WomanLongAnim,\n        controls: false,\n        loop: true,\n        config: {\n          file: {\n            attributes: {\n              autoPlay: true,\n              muted: true\n            }\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: statusWeather == 'Clear' ? 'fadeInEffect' : ' ',\n        children: /*#__PURE__*/_jsxDEV(ReactPlayer, {\n          className: 'EffectAnim Clear',\n          url: SunAnim,\n          controls: false,\n          loop: true,\n          config: {\n            file: {\n              attributes: {\n                autoPlay: true,\n                muted: true\n              }\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: statusWeather == 'Clouds' ? 'fadeInEffect' : ' ',\n        children: /*#__PURE__*/_jsxDEV(ReactPlayer, {\n          className: 'EffectAnim Clouds',\n          url: CloudsAnim,\n          controls: false,\n          loop: true,\n          config: {\n            file: {\n              attributes: {\n                autoPlay: true,\n                muted: true\n              }\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: statusWeather == 'rain' ? 'fadeInEffect' : ' ',\n        children: /*#__PURE__*/_jsxDEV(ReactPlayer, {\n          className: 'EffectAnim',\n          url: RainAnim,\n          controls: false,\n          loop: true,\n          config: {\n            file: {\n              attributes: {\n                autoPlay: true,\n                muted: true\n              }\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        children: /*#__PURE__*/_jsxDEV(MenuOpenIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"weatherNav\",\n        children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit(onSubmit),\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"inputTxt\",\n            placeholder: \"\\u4F8B)Tokyo, Osaka etc..\",\n            ...register(\"exampleRequired\", {\n              required: true\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"btn-radius-solid\",\n            type: \"submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 11\n          }, this), errors.exampleRequired && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"\\u30D5\\u30A9\\u30FC\\u30E0\\u306B\\u5165\\u529B\\u3055\\u308C\\u3066\\u3044\\u307E\\u305B\\u3093\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 38\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: statusName,\n          children: [\"\\u5834\\u6240:\", statusName]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\"\\u5929\\u6C17:\", statusWeather]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\"\\u73FE\\u5728\\u306E\\u6C17\\u6E29:\", temperature, \"\\u2103\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\"\\u6700\\u9AD8\\u6C17\\u6E29:\", maxTemperature, \"\\u2103\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\"\\u6700\\u4F4E\\u6C17\\u6E29:\", minTemperature, \"\\u2103\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n}\n\n_s(App, \"xJ6UtY38kiL5Xzx2T4Ry1IHqxZI=\", false, function () {\n  return [useForm];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/user/Desktop/react/webAnimationTest/src/App.js"],"names":["React","WomanLongAnim","WomanHalfAnim","SunAnim","CloudsAnim","RainAnim","axios","useForm","ReactPlayer","clsx","makeStyles","Drawer","Button","List","ListItem","ListItemText","MenuOpenIcon","CancelPresentationIcon","useStyles","list","width","fullList","App","statusName","setName","useState","statusWeather","setWeather","city","setCity","temperature","setTemp","maxTemperature","setMaxTemp","minTemperature","setMinTemp","topUrl","bottomUrl","register","handleSubmit","formState","errors","onSubmit","data","exampleRequired","useEffect","get","then","response","temp","parseInt","main","maxTemp","temp_max","minTemp","temp_min","console","log","name","weather","catch","err","file","attributes","autoPlay","muted","required"],"mappings":"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","sourcesContent":["import './App.css';\nimport React from 'react';\nimport WomanLongAnim from './long.mp4'\nimport WomanHalfAnim from './half.mp4'\nimport SunAnim from './sun.mp4'\nimport CloudsAnim from './clouds.mp4'\nimport RainAnim from './rain.mp4'\n// axiosで通信を行う\nimport axios from 'axios';\nimport { useForm } from \"react-hook-form\";\nimport ReactPlayer from \"react-player\";\n// Drawer\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport Button from '@material-ui/core/Button';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuOpenIcon from '@material-ui/icons/MenuOpen';\nimport CancelPresentationIcon from '@material-ui/icons/CancelPresentation';\n\nconst useStyles = makeStyles({\n  list: {\n    width: 250,\n  },\n  fullList: {\n    width: 'auto',\n  },\n});\n\n// function TemporaryDrawer(props) {\n//   const classes = useStyles();\n//   const [state, setState] = React.useState({right: true});\n\n//   const toggleDrawer = (anchor, open) => (event) => {\n//     if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n//       return;\n//     }\n\n//     setState({ ...state, [anchor]: open });\n//   };\n\n//   const list = (anchor) => (\n//     <div\n//       className={clsx(classes.list, {\n//         [classes.fullList]: anchor === 'top' || anchor === 'bottom',\n//       })}\n//       role=\"presentation\"\n//       onClick={toggleDrawer(anchor, false)}\n//       onKeyDown={toggleDrawer(anchor, false)}\n//     >\n//       <List>\n//           <ListItem button>\n//             <ListItemText primary={'item name'} />\n//           </ListItem>\n//           <h1 className={props.statusName}>場所:{props.statusName}</h1>\n//           <h1>天気:{props.statusWeather}</h1>\n//           <h1>現在の気温:{props.temperature}℃</h1>\n//           <h1>最高気温:{props.maxTemperature}℃</h1>\n//           <h1>最低気温:{props.minTemperature}℃</h1>\n\n//       </List>\n//     </div>\n//   );\n\n//   return (\n//     <div className=\"weatherTopNav\">\n//       {['right'].map((anchor) => (\n//         <React.Fragment key={anchor}>\n//           <Button onClick={toggleDrawer(anchor, true)}><MenuOpenIcon /></Button>\n//           <Drawer className=\"toggleDrawer\" anchor={anchor} open={state[anchor]} onClose={toggleDrawer(anchor, false)}>\n//             <div className=\"closeBtn\" onClick={toggleDrawer(anchor, false)}><CancelPresentationIcon /></div>\n//             {list(anchor)}\n//           </Drawer>\n//         </React.Fragment>\n//       ))}\n//     </div>\n//   );\n// }\n\n\n// API通信Getのやり方（axiosを使用）\n\nfunction App() {\n\n  // apiの情報をstate管理\n  const [statusName, setName] = React.useState('');\n  const [statusWeather, setWeather] = React.useState('');\n  const [city, setCity] = React.useState('Tokyo');\n  const [temperature, setTemp] = React.useState();\n  const [maxTemperature, setMaxTemp] = React.useState();\n  const [minTemperature, setMinTemp] = React.useState();\n  const topUrl = 'https://api.openweathermap.org/data/2.5/weather?q=';\n  const bottomUrl = ',jp&appid=ab772c4cd38076eff2acf4701e560be6';\n  // react-hook-form\n  const { register, handleSubmit, formState: { errors } } = useForm();\n  const onSubmit = data => {\n    setCity(data.exampleRequired);\n  }\n\n  // React.useEffect(() => { ... }, []);を入れることでaxiosの繰り返し処理を止めることができる\n  React.useEffect(() => {\n      // axios.get(URL)でapiからgetしてjsonを取得\n      axios.get(topUrl + city + bottomUrl)\n      // thenで成功した場合の処理をかける\n      .then(response => {\n        const temp = parseInt((response.data.main.temp - 273.15) * 10, 10) / 10;\n        const maxTemp = parseInt((response.data.main.temp_max - 273.15) * 10, 10) / 10;\n        const minTemp = parseInt((response.data.main.temp_min - 273.15) * 10, 10) / 10;\n        console.log(response.data.name);\n        setName(response.data.name);\n        setWeather(response.data.weather[0].main);\n        setTemp(temp);\n        setMaxTemp(maxTemp);\n        setMinTemp(minTemp);\n        \n        // catchでエラー時の挙動を定義する\n      }).catch(err => {\n        console.log('err:', err);\n      });\n      // 第二引数に[]を入れるとaxiosの繰り返し処理がなくなる\n    });\n  \n    \n  return (\n    <>\n    {/* <TemporaryDrawer \n    statusName={statusName}\n    statusWeather={statusWeather}\n    temperature={temperature}\n    maxTemperature={maxTemperature}\n    minTemperature={minTemperature}\n    /> */}\n\n    {/* woman animation */}\n    <div className=\"App\">\n      <ReactPlayer\n      className=\"womanAnim\"\n      url={(maxTemperature >= 25)?WomanHalfAnim:WomanLongAnim}\n      controls={false}\n      loop\n      config={{ file: { attributes: {\n        autoPlay: true,\n        muted: true\n      }}}}\n      />\n      {/* clear effects */}\n      <div className={(statusWeather == 'Clear')?'fadeInEffect':' '}>\n      <ReactPlayer\n      className={'EffectAnim Clear'}\n      url={SunAnim}\n      controls={false}\n      loop\n      config={{ file: { attributes: {\n        autoPlay: true,\n        muted: true\n      }}}}\n      />\n      </div>\n\n      {/* clouds effects */}\n      <div className={(statusWeather == 'Clouds')?'fadeInEffect':' '}>       \n      <ReactPlayer\n      className={'EffectAnim Clouds'}\n      url={CloudsAnim}\n      controls={false}\n      loop\n      config={{ file: { attributes: {\n        autoPlay: true,\n        muted: true\n      }}}}\n      />\n      </div>\n\n      {/* rain effects */}\n      <div className={(statusWeather == 'rain')?'fadeInEffect':' '}>\n      <ReactPlayer\n      className={'EffectAnim'}\n      url={RainAnim}\n      controls={false}\n      loop\n      config={{ file: { attributes: {\n        autoPlay: true,\n        muted: true\n      }}}}\n      />\n      </div>\n\n      <Button><MenuOpenIcon /></Button>\n      <div className=\"weatherNav\">\n        <br></br>\n        <br></br>\n\n        <form onSubmit={handleSubmit(onSubmit)}>\n          {/* include validation with required or other standard HTML validation rules */}\n          <input className=\"inputTxt\" placeholder=\"例)Tokyo, Osaka etc..\" {...register(\"exampleRequired\", { required: true })} />\n          {/* errors will return when field validation fails  */}\n          <input className=\"btn-radius-solid\" type=\"submit\" />\n          {errors.exampleRequired && <p>フォームに入力されていません</p>}\n        </form>\n\n        <h1 className={statusName}>場所:{statusName}</h1>\n        <h1>天気:{statusWeather}</h1>\n        <h1>現在の気温:{temperature}℃</h1>\n        <h1>最高気温:{maxTemperature}℃</h1>\n        <h1>最低気温:{minTemperature}℃</h1>\n      </div>\n\n      </div>\n    </>\n  );\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}