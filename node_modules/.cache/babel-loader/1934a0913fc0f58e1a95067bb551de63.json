{"ast":null,"code":"var _jsxFileName = \"/Users/user/Desktop/react/webAnimationTest/src/App.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport './App.css';\nimport React from 'react';\nimport WomanLongAnim from './long.mp4';\nimport WomanHalfAnim from './half.mp4';\nimport SunAnim from './sun.mp4';\nimport CloudsAnim from './clouds.mp4';\nimport RainAnim from './rain.mp4'; // axiosで通信を行う\n\nimport axios from 'axios';\nimport { useForm } from \"react-hook-form\";\nimport ReactPlayer from \"react-player\";\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport Button from '@material-ui/core/Button';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles({\n  list: {\n    width: 250\n  },\n  fullList: {\n    width: 'auto'\n  }\n});\n\nfunction TemporaryDrawer() {\n  _s();\n\n  const classes = useStyles();\n  const [state, setState] = React.useState({\n    right: false\n  });\n\n  const toggleDrawer = (anchor, open) => event => {\n    if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n      return;\n    }\n\n    setState({ ...state,\n      [anchor]: open\n    });\n  };\n\n  const list = anchor => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: clsx(classes.list, {\n      [classes.fullList]: anchor === 'top' || anchor === 'bottom'\n    }),\n    role: \"presentation\",\n    onClick: toggleDrawer(anchor, false),\n    onKeyDown: toggleDrawer(anchor, false),\n    children: [/*#__PURE__*/_jsxDEV(List, {\n      children: ['Inbox', 'Starred', 'Send email', 'Drafts'].map((text, index) => /*#__PURE__*/_jsxDEV(ListItem, {\n        button: true,\n        children: /*#__PURE__*/_jsxDEV(ListItemText, {\n          primary: text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this)\n      }, text, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(List, {\n      children: ['All mail', 'Trash', 'Spam'].map((text, index) => /*#__PURE__*/_jsxDEV(ListItem, {\n        button: true,\n        children: /*#__PURE__*/_jsxDEV(ListItemText, {\n          primary: text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this)\n      }, text, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"weatherTopNav\",\n    children: ['right'].map(anchor => /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: toggleDrawer(anchor, true),\n        children: anchor\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Drawer, {\n        anchor: anchor,\n        open: state[anchor],\n        onClose: toggleDrawer(anchor, false),\n        children: list(anchor)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this)]\n    }, anchor, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n} // API通信Getのやり方（axiosを使用）\n\n\n_s(TemporaryDrawer, \"Knjo6u9btPQrziNOt7MxsmcxanE=\", false, function () {\n  return [useStyles];\n});\n\n_c = TemporaryDrawer;\n\nfunction App() {\n  _s2();\n\n  // apiの情報をstate管理\n  const [statusName, setName] = React.useState('');\n  const [statusWeather, setWeather] = React.useState('');\n  const [city, setCity] = React.useState('Tokyo');\n  const [temperature, setTemp] = React.useState();\n  const [maxTemperature, setMaxTemp] = React.useState();\n  const [minTemperature, setMinTemp] = React.useState();\n  const topUrl = 'https://api.openweathermap.org/data/2.5/weather?q=';\n  const bottomUrl = ',jp&appid=ab772c4cd38076eff2acf4701e560be6'; // react-hook-form\n\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm();\n\n  const onSubmit = data => {\n    setCity(data.exampleRequired);\n  }; // React.useEffect(() => { ... }, []);を入れることでaxiosの繰り返し処理を止めることができる\n  // React.useEffect(() => {\n  //     // axios.get(URL)でapiからgetしてjsonを取得\n  //     axios.get(topUrl + city + bottomUrl)\n  //     // thenで成功した場合の処理をかける\n  //     .then(response => {\n  //       const temp = parseInt((response.data.main.temp - 273.15) * 10, 10) / 10;\n  //       const maxTemp = parseInt((response.data.main.temp_max - 273.15) * 10, 10) / 10;\n  //       const minTemp = parseInt((response.data.main.temp_min - 273.15) * 10, 10) / 10;\n  //       console.log(response.data.name);\n  //       setName(response.data.name);\n  //       setWeather(response.data.weather[0].main);\n  //       setTemp(temp);\n  //       setMaxTemp(maxTemp);\n  //       setMinTemp(minTemp);\n  //       // catchでエラー時の挙動を定義する\n  //     }).catch(err => {\n  //       console.log('err:', err);\n  //     });\n  //     // 第二引数に[]を入れるとaxiosの繰り返し処理がなくなる\n  //   });\n  // 半袖の目安は25度以上\n\n\n  const WomanAnim = 25 >= 25 ? WomanLongAnim : WomanHalfAnim;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(TemporaryDrawer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(ReactPlayer, {\n        className: \"womanAnim\",\n        url: WomanAnim,\n        controls: false,\n        loop: true,\n        config: {\n          file: {\n            attributes: {\n              autoPlay: true,\n              muted: true\n            }\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: statusWeather == 'Clear' ? 'fadeInEffect' : ' ',\n        children: /*#__PURE__*/_jsxDEV(ReactPlayer, {\n          className: 'EffectAnim Clear',\n          url: SunAnim,\n          controls: false,\n          loop: true,\n          config: {\n            file: {\n              attributes: {\n                autoPlay: true,\n                muted: true\n              }\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: statusWeather == 'Clouds' ? 'fadeInEffect' : ' ',\n        children: /*#__PURE__*/_jsxDEV(ReactPlayer, {\n          className: 'EffectAnim Clouds',\n          url: CloudsAnim,\n          controls: false,\n          loop: true,\n          config: {\n            file: {\n              attributes: {\n                autoPlay: true,\n                muted: true\n              }\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: statusWeather == 'rain' ? 'fadeInEffect' : ' ',\n        children: /*#__PURE__*/_jsxDEV(ReactPlayer, {\n          className: 'EffectAnim',\n          url: RainAnim,\n          controls: false,\n          loop: true,\n          config: {\n            file: {\n              attributes: {\n                autoPlay: true,\n                muted: true\n              }\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"weatherNav\",\n        children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit(onSubmit),\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"inputTxt\",\n            placeholder: \"\\u4F8B)Tokyo, Osaka etc..\",\n            ...register(\"exampleRequired\", {\n              required: true\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"btn-radius-solid\",\n            type: \"submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 11\n          }, this), errors.exampleRequired && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"\\u30D5\\u30A9\\u30FC\\u30E0\\u306B\\u5165\\u529B\\u3055\\u308C\\u3066\\u3044\\u307E\\u305B\\u3093\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 38\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: statusName,\n          children: [\"\\u5834\\u6240:\", statusName]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\"\\u5929\\u6C17:\", statusWeather]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\"\\u73FE\\u5728\\u306E\\u6C17\\u6E29:\", temperature, \"\\u2103\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\"\\u6700\\u9AD8\\u6C17\\u6E29:\", maxTemperature, \"\\u2103\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\"\\u6700\\u4F4E\\u6C17\\u6E29:\", minTemperature, \"\\u2103\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n\n_s2(App, \"Suf9cGy7XGsQOnaW1Dnbafn8AKI=\", false, function () {\n  return [useForm];\n});\n\n_c2 = App;\nexport default App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"TemporaryDrawer\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"sources":["/Users/user/Desktop/react/webAnimationTest/src/App.js"],"names":["React","WomanLongAnim","WomanHalfAnim","SunAnim","CloudsAnim","RainAnim","axios","useForm","ReactPlayer","clsx","makeStyles","Drawer","Button","List","Divider","ListItem","ListItemText","useStyles","list","width","fullList","TemporaryDrawer","classes","state","setState","useState","right","toggleDrawer","anchor","open","event","type","key","map","text","index","App","statusName","setName","statusWeather","setWeather","city","setCity","temperature","setTemp","maxTemperature","setMaxTemp","minTemperature","setMinTemp","topUrl","bottomUrl","register","handleSubmit","formState","errors","onSubmit","data","exampleRequired","WomanAnim","file","attributes","autoPlay","muted","required"],"mappings":"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","sourcesContent":["import './App.css';\nimport React from 'react';\nimport WomanLongAnim from './long.mp4'\nimport WomanHalfAnim from './half.mp4'\nimport SunAnim from './sun.mp4'\nimport CloudsAnim from './clouds.mp4'\nimport RainAnim from './rain.mp4'\n// axiosで通信を行う\nimport axios from 'axios';\nimport { useForm } from \"react-hook-form\";\nimport ReactPlayer from \"react-player\";\n\n\n\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport Button from '@material-ui/core/Button';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\n\nconst useStyles = makeStyles({\n  list: {\n    width: 250,\n  },\n  fullList: {\n    width: 'auto',\n  },\n});\n\nfunction TemporaryDrawer() {\n  const classes = useStyles();\n  const [state, setState] = React.useState({right: false});\n\n  const toggleDrawer = (anchor, open) => (event) => {\n    if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n      return;\n    }\n\n    setState({ ...state, [anchor]: open });\n  };\n\n  const list = (anchor) => (\n    <div\n      className={clsx(classes.list, {\n        [classes.fullList]: anchor === 'top' || anchor === 'bottom',\n      })}\n      role=\"presentation\"\n      onClick={toggleDrawer(anchor, false)}\n      onKeyDown={toggleDrawer(anchor, false)}\n    >\n      <List>\n        {['Inbox', 'Starred', 'Send email', 'Drafts'].map((text, index) => (\n          <ListItem button key={text}>\n            <ListItemText primary={text} />\n          </ListItem>\n        ))}\n      </List>\n      <Divider />\n      <List>\n        {['All mail', 'Trash', 'Spam'].map((text, index) => (\n          <ListItem button key={text}>\n            <ListItemText primary={text} />\n          </ListItem>\n        ))}\n      </List>\n    </div>\n  );\n\n  return (\n    <div className=\"weatherTopNav\">\n      {['right'].map((anchor) => (\n        <React.Fragment key={anchor}>\n          <Button onClick={toggleDrawer(anchor, true)}>{anchor}</Button>\n          <Drawer anchor={anchor} open={state[anchor]} onClose={toggleDrawer(anchor, false)}>\n            {list(anchor)}\n          </Drawer>\n        </React.Fragment>\n      ))}\n    </div>\n  );\n}\n\n\n\n\n\n\n\n\n// API通信Getのやり方（axiosを使用）\nfunction App() {\n\n  // apiの情報をstate管理\n  const [statusName, setName] = React.useState('');\n  const [statusWeather, setWeather] = React.useState('');\n  const [city, setCity] = React.useState('Tokyo');\n  const [temperature, setTemp] = React.useState();\n  const [maxTemperature, setMaxTemp] = React.useState();\n  const [minTemperature, setMinTemp] = React.useState();\n  const topUrl = 'https://api.openweathermap.org/data/2.5/weather?q=';\n  const bottomUrl = ',jp&appid=ab772c4cd38076eff2acf4701e560be6';\n\n  // react-hook-form\n  const { register, handleSubmit, formState: { errors } } = useForm();\n  const onSubmit = data => {\n    setCity(data.exampleRequired);\n  }\n\n  // React.useEffect(() => { ... }, []);を入れることでaxiosの繰り返し処理を止めることができる\n  // React.useEffect(() => {\n  //     // axios.get(URL)でapiからgetしてjsonを取得\n  //     axios.get(topUrl + city + bottomUrl)\n  //     // thenで成功した場合の処理をかける\n  //     .then(response => {\n  //       const temp = parseInt((response.data.main.temp - 273.15) * 10, 10) / 10;\n  //       const maxTemp = parseInt((response.data.main.temp_max - 273.15) * 10, 10) / 10;\n  //       const minTemp = parseInt((response.data.main.temp_min - 273.15) * 10, 10) / 10;\n  //       console.log(response.data.name);\n  //       setName(response.data.name);\n  //       setWeather(response.data.weather[0].main);\n  //       setTemp(temp);\n  //       setMaxTemp(maxTemp);\n  //       setMinTemp(minTemp);\n  //       // catchでエラー時の挙動を定義する\n  //     }).catch(err => {\n  //       console.log('err:', err);\n  //     });\n  //     // 第二引数に[]を入れるとaxiosの繰り返し処理がなくなる\n  //   });\n\n  // 半袖の目安は25度以上\n  const WomanAnim = (25 >= 25)?WomanLongAnim:WomanHalfAnim;\n  \n    \n  return (\n    <>\n    <TemporaryDrawer />\n\n\n    {/* woman animation */}\n    <div className=\"App\">\n      <ReactPlayer\n      className=\"womanAnim\"\n      url={WomanAnim}\n      controls={false}\n      loop\n      config={{ file: { attributes: {\n        autoPlay: true,\n        muted: true\n      }}}}\n      />\n      {/* clear effects */}\n      <div className={(statusWeather == 'Clear')?'fadeInEffect':' '}>\n      <ReactPlayer\n      className={'EffectAnim Clear'}\n      url={SunAnim}\n      controls={false}\n      loop\n      config={{ file: { attributes: {\n        autoPlay: true,\n        muted: true\n      }}}}\n      />\n      </div>\n\n      {/* clouds effects */}\n      <div className={(statusWeather == 'Clouds')?'fadeInEffect':' '}>       \n      <ReactPlayer\n      className={'EffectAnim Clouds'}\n      url={CloudsAnim}\n      controls={false}\n      loop\n      config={{ file: { attributes: {\n        autoPlay: true,\n        muted: true\n      }}}}\n      />\n      </div>\n\n      {/* rain effects */}\n      <div className={(statusWeather == 'rain')?'fadeInEffect':' '}>\n      <ReactPlayer\n      className={'EffectAnim'}\n      url={RainAnim}\n      controls={false}\n      loop\n      config={{ file: { attributes: {\n        autoPlay: true,\n        muted: true\n      }}}}\n      />\n      </div>\n\n      <div className=\"weatherNav\">\n        <br></br>\n        <br></br>\n\n        <form onSubmit={handleSubmit(onSubmit)}>\n          {/* include validation with required or other standard HTML validation rules */}\n          <input className=\"inputTxt\" placeholder=\"例)Tokyo, Osaka etc..\" {...register(\"exampleRequired\", { required: true })} />\n          {/* errors will return when field validation fails  */}\n          <input className=\"btn-radius-solid\" type=\"submit\" />\n          {errors.exampleRequired && <p>フォームに入力されていません</p>}\n        </form>\n\n        <h1 className={statusName}>場所:{statusName}</h1>\n        <h1>天気:{statusWeather}</h1>\n        <h1>現在の気温:{temperature}℃</h1>\n        <h1>最高気温:{maxTemperature}℃</h1>\n        <h1>最低気温:{minTemperature}℃</h1>\n      </div>\n\n      </div>\n    </>\n  );\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}