{"ast":null,"code":"var _jsxFileName = \"/Users/user/Desktop/react/weather_app/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport React from 'react'; // axiosで通信を行う\n\nimport axios from 'axios'; // API通信Getのやり方（axiosを使用）\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  // apiの情報をstate管理\n  const [statusName, setName] = React.useState('loading');\n  const [statusWeather, setWeather] = React.useState('loading'); // React.useEffect(() => { ... }, []);を入れることでaxiosの繰り返し処理を止めることができる\n\n  React.useEffect(() => {\n    // axios.get(URL)でapiからgetしてjsonを取得\n    axios.get('https://api.openweathermap.org/data/2.5/weather?q=Tokyo,jp&appid=ab772c4cd38076eff2acf4701e560be6') // thenで成功した場合の処理をかける\n    .then(response => {\n      console.log(response);\n      console.log(response.data.weather[0].main);\n      setName(response.data.name);\n      setWeather(response.data.weather[0].main); // catchでエラー時の挙動を定義する\n    }).catch(err => {\n      console.log('err:', err);\n    });\n  }, []); // onClickでclickedが発火\n\n  const clicked = () => {\n    alert('ok');\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"\",\n        children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\u4E0B\\u306E\\u30DC\\u30BF\\u30F3\\u3092\\u30AF\\u30EA\\u30C3\\u30AF\\u3057\\u3066\\u304F\\u3060\\u3055\\u3044\\u3002\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => clicked(),\n          children: \"Click\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\"Name:\", statusName]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\"Weather:\", statusWeather]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n} // function App() {\n//   return (\n//     <div className=\"App\">\n//       <header className=\"App-header\">\n//         <img src={logo} className=\"App-logo\" alt=\"logo\" />\n//         <p>\n//           Edit <code>src/App.js</code> and save to reload.\n//         </p>\n//         <a\n//           className=\"App-link\"\n//           href=\"https://reactjs.org\"\n//           target=\"_blank\"\n//           rel=\"noopener noreferrer\"\n//         >\n//           Learn React\n//         </a>\n//       </header>\n//     </div>\n//   );\n// }\n\n\n_s(App, \"dWN8e1gGMsQD+sGpuAdrTlZUesg=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/user/Desktop/react/weather_app/src/App.js"],"names":["React","axios","App","statusName","setName","useState","statusWeather","setWeather","useEffect","get","then","response","console","log","data","weather","main","name","catch","err","clicked","alert"],"mappings":";;;AAAA,OAAO,WAAP;AACA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CAKA;;;;;AACA,SAASC,GAAT,GAAe;AAAA;;AACb;AACA,QAAM,CAACC,UAAD,EAAaC,OAAb,IAAwBJ,KAAK,CAACK,QAAN,CAAe,SAAf,CAA9B;AACA,QAAM,CAACC,aAAD,EAAgBC,UAAhB,IAA8BP,KAAK,CAACK,QAAN,CAAe,SAAf,CAApC,CAHa,CAKb;;AACAL,EAAAA,KAAK,CAACQ,SAAN,CAAgB,MAAM;AAEpB;AACAP,IAAAA,KAAK,CAACQ,GAAN,CAAU,mGAAV,EACA;AADA,KAECC,IAFD,CAEMC,QAAQ,IAAI;AAChBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,IAAT,CAAcC,OAAd,CAAuB,CAAvB,EAA0BC,IAAtC;AACAZ,MAAAA,OAAO,CAACO,QAAQ,CAACG,IAAT,CAAcG,IAAf,CAAP;AACAV,MAAAA,UAAU,CAACI,QAAQ,CAACG,IAAT,CAAcC,OAAd,CAAuB,CAAvB,EAA0BC,IAA3B,CAAV,CAJgB,CAMhB;AACD,KATD,EASGE,KATH,CASSC,GAAG,IAAI;AACdP,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBM,GAApB;AACD,KAXD;AAcD,GAjBD,EAiBG,EAjBH,EANa,CA2BX;;AACA,QAAMC,OAAO,GAAG,MAAK;AACnBC,IAAAA,KAAK,CAAC,IAAD,CAAL;AACD,GAFD;;AAKF,sBACE;AAAA,2BACA;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,EAAf;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF,eAIE;AAAQ,UAAA,OAAO,EAAE,MAAID,OAAO,EAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF,eAKE;AAAA,8BAAUjB,UAAV;AAAA;AAAA;AAAA;AAAA;AAAA,gBALF,eAME;AAAA,iCAAaG,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA,gBANF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADA,mBADF;AAcD,C,CAaD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;GA/ESJ,G;;KAAAA,G;AAiFT,eAAeA,GAAf","sourcesContent":["import './App.css';\nimport React from 'react';\n// axiosで通信を行う\nimport axios from 'axios';\n\n\n  \n\n// API通信Getのやり方（axiosを使用）\nfunction App() {\n  // apiの情報をstate管理\n  const [statusName, setName] = React.useState('loading');\n  const [statusWeather, setWeather] = React.useState('loading');\n\n  // React.useEffect(() => { ... }, []);を入れることでaxiosの繰り返し処理を止めることができる\n  React.useEffect(() => {\n\n    // axios.get(URL)でapiからgetしてjsonを取得\n    axios.get('https://api.openweathermap.org/data/2.5/weather?q=Tokyo,jp&appid=ab772c4cd38076eff2acf4701e560be6')\n    // thenで成功した場合の処理をかける\n    .then(response => {\n      console.log(response);\n      console.log(response.data.weather.[0].main);\n      setName(response.data.name);\n      setWeather(response.data.weather.[0].main);\n  \n      // catchでエラー時の挙動を定義する\n    }).catch(err => {\n      console.log('err:', err);\n    });\n\n\n  }, []);\n\n  \n\n    // onClickでclickedが発火\n    const clicked = () =>{\n      alert('ok')\n    }\n\n  \n  return (\n    <>\n    <div className=\"App\">\n      <div className=\"\">\n        <br></br>\n        <br></br>\n        <p>下のボタンをクリックしてください。</p>\n        <button onClick={()=>clicked()}>Click</button>\n        <h1>Name:{statusName}</h1>\n        <h1>Weather:{statusWeather}</h1>\n      </div>\n    </div>\n    </>\n  );\n}\n\n\n\n\n\n\n\n\n\n\n\n\n// function App() {\n//   return (\n//     <div className=\"App\">\n//       <header className=\"App-header\">\n//         <img src={logo} className=\"App-logo\" alt=\"logo\" />\n//         <p>\n//           Edit <code>src/App.js</code> and save to reload.\n//         </p>\n//         <a\n//           className=\"App-link\"\n//           href=\"https://reactjs.org\"\n//           target=\"_blank\"\n//           rel=\"noopener noreferrer\"\n//         >\n//           Learn React\n//         </a>\n//       </header>\n//     </div>\n//   );\n// }\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}