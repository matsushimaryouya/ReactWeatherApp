{"ast":null,"code":"var _jsxFileName = \"/Users/user/Desktop/react/webAnimationTest/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport React from 'react';\nimport WomanLongAnim from './long.mp4';\nimport WomanHalfAnim from './half.mp4';\nimport SunAnim from './sun.mp4';\nimport CloudsAnim from './clouds.mp4';\nimport RainAnim from './rain.mp4'; // axiosで通信を行う\n\nimport axios from 'axios';\nimport { useForm } from \"react-hook-form\";\nimport ReactPlayer from \"react-player\";\nimport { Button } from '@material-ui'; // API通信Getのやり方（axiosを使用）\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  // apiの情報をstate管理\n  const [statusName, setName] = React.useState('');\n  const [statusWeather, setWeather] = React.useState('');\n  const [city, setCity] = React.useState('Tokyo');\n  const [temperature, setTemp] = React.useState();\n  const [maxTemperature, setMaxTemp] = React.useState();\n  const [minTemperature, setMinTemp] = React.useState();\n  const topUrl = 'https://api.openweathermap.org/data/2.5/weather?q=';\n  const bottomUrl = ',jp&appid=ab772c4cd38076eff2acf4701e560be6'; // react-hook-form\n\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm();\n\n  const onSubmit = data => {\n    setCity(data.exampleRequired);\n  }; // React.useEffect(() => { ... }, []);を入れることでaxiosの繰り返し処理を止めることができる\n  // React.useEffect(() => {\n  //     // axios.get(URL)でapiからgetしてjsonを取得\n  //     axios.get(topUrl + city + bottomUrl)\n  //     // thenで成功した場合の処理をかける\n  //     .then(response => {\n  //       const temp = parseInt((response.data.main.temp - 273.15) * 10, 10) / 10;\n  //       const maxTemp = parseInt((response.data.main.temp_max - 273.15) * 10, 10) / 10;\n  //       const minTemp = parseInt((response.data.main.temp_min - 273.15) * 10, 10) / 10;\n  //       console.log(response.data.name);\n  //       setName(response.data.name);\n  //       setWeather(response.data.weather[0].main);\n  //       setTemp(temp);\n  //       setMaxTemp(maxTemp);\n  //       setMinTemp(minTemp);\n  //       // catchでエラー時の挙動を定義する\n  //     }).catch(err => {\n  //       console.log('err:', err);\n  //     });\n  //     // 第二引数に[]を入れるとaxiosの繰り返し処理がなくなる\n  //   });\n  // 半袖の目安は25度以上\n\n\n  const WomanAnim = 25 >= 25 ? WomanLongAnim : WomanHalfAnim;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(ReactPlayer, {\n        className: \"womanAnim\",\n        url: WomanAnim,\n        controls: false,\n        loop: true,\n        config: {\n          file: {\n            attributes: {\n              autoPlay: true,\n              muted: true\n            }\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(ReactPlayer, {\n        className: 'EffectAnim',\n        url: SunAnim,\n        controls: false,\n        loop: true,\n        config: {\n          file: {\n            attributes: {\n              autoPlay: true,\n              muted: true\n            }\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: statusWeather,\n        children: /*#__PURE__*/_jsxDEV(ReactPlayer, {\n          className: 'EffectAnim',\n          url: CloudsAnim,\n          controls: false,\n          loop: true,\n          config: {\n            file: {\n              attributes: {\n                autoPlay: true,\n                muted: true\n              }\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(ReactPlayer, {\n        className: 'EffectAnim',\n        url: RainAnim,\n        controls: false,\n        loop: true,\n        config: {\n          file: {\n            attributes: {\n              autoPlay: true,\n              muted: true\n            }\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 7\n      }, this), ['left', 'right', 'top', 'bottom'].map(anchor => /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: toggleDrawer(anchor, true),\n          children: anchor\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(Drawer, {\n          anchor: anchor,\n          open: state[anchor],\n          onClose: toggleDrawer(anchor, false),\n          children: list(anchor)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 5\n        }, this)]\n      }, anchor, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 3\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"weatherNav\",\n        children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit(onSubmit),\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"inputTxt\",\n            placeholder: \"\\u4F8B)Tokyo, Osaka etc..\",\n            ...register(\"exampleRequired\", {\n              required: true\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"btn-radius-solid\",\n            type: \"submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 11\n          }, this), errors.exampleRequired && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"\\u30D5\\u30A9\\u30FC\\u30E0\\u306B\\u5165\\u529B\\u3055\\u308C\\u3066\\u3044\\u307E\\u305B\\u3093\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 38\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: statusName,\n          children: [\"City:\", statusName]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\"Weather:\", statusWeather]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\"temp:\", temperature]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\"MaxTemp:\", maxTemperature]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\"MinTemp:\", minTemperature]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n}\n\n_s(App, \"Suf9cGy7XGsQOnaW1Dnbafn8AKI=\", false, function () {\n  return [useForm];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/user/Desktop/react/webAnimationTest/src/App.js"],"names":["React","WomanLongAnim","WomanHalfAnim","SunAnim","CloudsAnim","RainAnim","axios","useForm","ReactPlayer","Button","App","statusName","setName","useState","statusWeather","setWeather","city","setCity","temperature","setTemp","maxTemperature","setMaxTemp","minTemperature","setMinTemp","topUrl","bottomUrl","register","handleSubmit","formState","errors","onSubmit","data","exampleRequired","WomanAnim","file","attributes","autoPlay","muted","map","anchor","toggleDrawer","state","list","required"],"mappings":"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","sourcesContent":["import './App.css';\nimport React from 'react';\nimport WomanLongAnim from './long.mp4'\nimport WomanHalfAnim from './half.mp4'\nimport SunAnim from './sun.mp4'\nimport CloudsAnim from './clouds.mp4'\nimport RainAnim from './rain.mp4'\n// axiosで通信を行う\nimport axios from 'axios';\nimport { useForm } from \"react-hook-form\";\nimport ReactPlayer from \"react-player\";\nimport { Button } from '@material-ui';\n\n\n// API通信Getのやり方（axiosを使用）\nfunction App() {\n\n  // apiの情報をstate管理\n  const [statusName, setName] = React.useState('');\n  const [statusWeather, setWeather] = React.useState('');\n  const [city, setCity] = React.useState('Tokyo');\n  const [temperature, setTemp] = React.useState();\n  const [maxTemperature, setMaxTemp] = React.useState();\n  const [minTemperature, setMinTemp] = React.useState();\n  const topUrl = 'https://api.openweathermap.org/data/2.5/weather?q=';\n  const bottomUrl = ',jp&appid=ab772c4cd38076eff2acf4701e560be6';\n\n  // react-hook-form\n  const { register, handleSubmit, formState: { errors } } = useForm();\n  const onSubmit = data => {\n    setCity(data.exampleRequired);\n  }\n\n  // React.useEffect(() => { ... }, []);を入れることでaxiosの繰り返し処理を止めることができる\n  // React.useEffect(() => {\n  //     // axios.get(URL)でapiからgetしてjsonを取得\n  //     axios.get(topUrl + city + bottomUrl)\n  //     // thenで成功した場合の処理をかける\n  //     .then(response => {\n  //       const temp = parseInt((response.data.main.temp - 273.15) * 10, 10) / 10;\n  //       const maxTemp = parseInt((response.data.main.temp_max - 273.15) * 10, 10) / 10;\n  //       const minTemp = parseInt((response.data.main.temp_min - 273.15) * 10, 10) / 10;\n  //       console.log(response.data.name);\n  //       setName(response.data.name);\n  //       setWeather(response.data.weather[0].main);\n  //       setTemp(temp);\n  //       setMaxTemp(maxTemp);\n  //       setMinTemp(minTemp);\n  //       // catchでエラー時の挙動を定義する\n  //     }).catch(err => {\n  //       console.log('err:', err);\n  //     });\n  //     // 第二引数に[]を入れるとaxiosの繰り返し処理がなくなる\n  //   });\n\n  // 半袖の目安は25度以上\n  const WomanAnim = (25 >= 25)?WomanLongAnim:WomanHalfAnim;\n    \n  return (\n    <>\n    {/* woman animation */}\n    <div className=\"App\">\n      <ReactPlayer\n      className=\"womanAnim\"\n      url={WomanAnim}\n      controls={false}\n      loop\n      config={{ file: { attributes: {\n        autoPlay: true,\n        muted: true\n      }}}}\n      />\n      {/* sun effects */}\n      <ReactPlayer\n      className={'EffectAnim'}\n      url={SunAnim}\n      controls={false}\n      loop\n      config={{ file: { attributes: {\n        autoPlay: true,\n        muted: true\n      }}}}\n      />\n\n      {/* clouds effects */}\n      <div className={statusWeather}>       \n      <ReactPlayer\n      className={'EffectAnim'}\n      url={CloudsAnim}\n      controls={false}\n      loop\n      config={{ file: { attributes: {\n        autoPlay: true,\n        muted: true\n      }}}}\n      />\n      </div>\n\n      {/* rain effects */}\n      <ReactPlayer\n      className={'EffectAnim'}\n      url={RainAnim}\n      controls={false}\n      loop\n      config={{ file: { attributes: {\n        autoPlay: true,\n        muted: true\n      }}}}\n      />\n      {['left', 'right', 'top', 'bottom'].map((anchor) => (\n  <React.Fragment key={anchor}>\n    <Button onClick={toggleDrawer(anchor, true)}>{anchor}</Button>\n    <Drawer anchor={anchor} open={state[anchor]} onClose={toggleDrawer(anchor, false)}>\n      {list(anchor)}\n    </Drawer>\n  </React.Fragment>\n))}\n\n\n\n\n      <div className=\"weatherNav\">\n        <br></br>\n        <br></br>\n\n        <form onSubmit={handleSubmit(onSubmit)}>\n          {/* include validation with required or other standard HTML validation rules */}\n          <input className=\"inputTxt\" placeholder=\"例)Tokyo, Osaka etc..\" {...register(\"exampleRequired\", { required: true })} />\n          {/* errors will return when field validation fails  */}\n          <input className=\"btn-radius-solid\" type=\"submit\" />\n          {errors.exampleRequired && <p>フォームに入力されていません</p>}\n        </form>\n\n        <h1 className={statusName}>City:{statusName}</h1>\n        <h1>Weather:{statusWeather}</h1>\n        <h1>temp:{temperature}</h1>\n        <h1>MaxTemp:{maxTemperature}</h1>\n        <h1>MinTemp:{minTemperature}</h1>\n      </div>\n\n      </div>\n    </>\n  );\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}