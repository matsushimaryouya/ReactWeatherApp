[{"/Users/user/Desktop/react/weather_app/src/index.js":"1","/Users/user/Desktop/react/weather_app/src/reportWebVitals.js":"2","/Users/user/Desktop/react/weather_app/src/App.js":"3","/Users/user/Desktop/react/webAnimationTest/src/index.js":"4","/Users/user/Desktop/react/webAnimationTest/src/reportWebVitals.js":"5","/Users/user/Desktop/react/webAnimationTest/src/App.js":"6"},{"size":500,"mtime":1617356978474,"results":"7","hashOfConfig":"8"},{"size":362,"mtime":1617356978475,"results":"9","hashOfConfig":"8"},{"size":3152,"mtime":1617580352979,"results":"10","hashOfConfig":"8"},{"size":500,"mtime":1617886434904,"results":"11","hashOfConfig":"12"},{"size":362,"mtime":1617356978475,"results":"13","hashOfConfig":"12"},{"size":5528,"mtime":1617884459113,"results":"14","hashOfConfig":"12"},{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},"2arib8",{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"fuk5mn",{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29"},"/Users/user/Desktop/react/weather_app/src/index.js",[],["30","31"],"/Users/user/Desktop/react/weather_app/src/reportWebVitals.js",[],"/Users/user/Desktop/react/weather_app/src/App.js",["32"],"/Users/user/Desktop/react/webAnimationTest/src/index.js",[],"/Users/user/Desktop/react/webAnimationTest/src/reportWebVitals.js",[],["33","34"],"/Users/user/Desktop/react/webAnimationTest/src/App.js",["35","36","37","38","39","40"],"import './App.css';\nimport React from 'react';\nimport WomanLongAnim from './long.mp4'\nimport WomanHalfAnim from './half.mp4'\nimport SunAnim from './sun.mp4'\nimport CloudsAnim from './clouds.mp4'\nimport RainAnim from './rain.mp4'\nimport axios from 'axios';// axiosで通信を行う\nimport { useForm } from \"react-hook-form\";\nimport ReactPlayer from \"react-player\";\nimport Button from '@material-ui/core/Button';\nimport MenuOpenIcon from '@material-ui/icons/MenuOpen';\nimport CloseIcon from '@material-ui/icons/Close';\n\nfunction App() {\n  // apiの情報をstate管理\n  const [statusName, setName] = React.useState('');\n  const [statusWeather, setWeather] = React.useState('');\n  const [city, setCity] = React.useState('Tokyo');\n  const [temperature, setTemp] = React.useState();\n  const [maxTemperature, setMaxTemp] = React.useState();\n  const [minTemperature, setMinTemp] = React.useState();\n  const [closeNav, setCloseNav] = React.useState(false);\n  const topUrl = 'https://api.openweathermap.org/data/2.5/weather?q=';\n  const bottomUrl = ',jp&appid=ab772c4cd38076eff2acf4701e560be6';\n  // react-hook-form\n  const { register, handleSubmit, formState: { errors } } = useForm();\n  const onSubmit = data => {\n    setCity(data.exampleRequired);\n  }\n\n  // React.useEffect(() => { ... }, []);を入れることでaxiosの繰り返し処理を止めることができる\n  React.useEffect(() => {\n    // axios.get(URL)でapiからgetしてjsonを取得\n    axios.get(topUrl + city + bottomUrl)\n    // thenで成功した場合の処理をかける\n    .then(response => {\n      const temp = parseInt((response.data.main.temp - 273.15) * 10, 10) / 10;\n      const maxTemp = parseInt((response.data.main.temp_max - 273.15) * 10, 10) / 10;\n      const minTemp = parseInt((response.data.main.temp_min - 273.15) * 10, 10) / 10;\n      console.log(response.data.name);\n      setName(response.data.name);\n      setWeather(response.data.weather[0].main);\n      setTemp(temp);\n      setMaxTemp(maxTemp);\n      setMinTemp(minTemp);\n    }).catch(err => {\n      console.log('err:', err);\n    });\n  // 第二引数に[]を入れるとaxiosの繰り返し処理がなくなる\n  });\n\n  // サイドバーボタンの処理\n  const navClick = () => {\n    setCloseNav(!closeNav);\n  }\n  const navState = closeNav?'closeNav': 'openNav';\n\n  // レスポンシブ\n  React.useEffect(() => {\n    const windowSize = document.body.clientWidth;\n    if(windowSize <= 500){\n      setCloseNav(true);\n    }\n  }, []);\n\n  return (\n    <>\n      {/* woman animation */}\n      <div className=\"App\">\n        <h1 className={'cityName'}>{statusName}</h1>\n        {/* womanAnimation */}\n        <ReactPlayer\n        className=\"womanAnim\"\n        url={(maxTemperature >= 25)?WomanHalfAnim:WomanLongAnim}\n        controls={false}\n        loop\n        muted\n        playsinline\n        config={{ file: { attributes: {\n          autoPlay: true,\n        }}}}\n      />\n\n        {/* clear effects */}\n        <div className={(statusWeather == 'Clear')?'fadeInEffect':' '}>\n          <ReactPlayer\n          className={'EffectAnim Clear'}\n          url={SunAnim}\n          controls={false}\n          loop\n          muted\n          playsinline\n          config={{ file: { attributes: {\n            autoPlay: true,\n            muted: true\n          }}}}\n          />\n        </div>\n\n        {/* clouds effects */}\n        <div className={(statusWeather == 'Clouds')?'fadeInEffect':' '}>       \n          <ReactPlayer\n          className={'EffectAnim Clouds'}\n          url={CloudsAnim}\n          controls={false}\n          loop\n          muted\n          playsinline\n          config={{ file: { attributes: {\n            autoPlay: true,\n            muted: true\n          }}}}\n          />\n        </div>\n\n        {/* rain effects */}\n        <div className={(statusWeather == 'Rain')?'fadeInEffect':' '}>\n          <ReactPlayer\n          className={'EffectAnim Rain'}\n          url={RainAnim}\n          controls={false}\n          loop\n          muted\n          playsinline\n          config={{ file: { attributes: {\n            autoPlay: true,\n            muted: true\n          }}}}\n          />\n        </div>\n\n        {/* サイドバー */}\n        <div className={\"weatherNav\" + ' ' + navState}>\n          <br></br>\n          <br></br>\n          <Button className={'btnStyle'} onClick={navClick}>\n            <MenuOpenIcon className={(navState=='openNav')? 'noneBtn': ' '}/>\n            <CloseIcon className={(navState=='closeNav')? 'noneBtn': ' '} />\n          </Button>\n            <p>日本の都市を検索できます。\n            <br></br>アルファベットでご入力ください。\n            </p>\n            <form onSubmit={handleSubmit(onSubmit)}>\n              {/* include validation with required or other standard HTML validation rules */}\n              <input className=\"inputTxt\" placeholder=\"例)Tokyo, Osaka etc..\" {...register(\"exampleRequired\", { required: true })} />\n              {/* errors will return when field validation fails  */}\n              <input className=\"btn-radius-solid\" type=\"submit\" />\n              {errors.exampleRequired && <p>フォームに入力されていません</p>}\n            </form>\n\n            <h1 className={statusName}>場所:{statusName}</h1>\n            <h1>天気:{statusWeather}</h1>\n            <h1>現在の気温:{temperature}℃</h1>\n            <h1>最高気温:{maxTemperature}℃</h1>\n            <h1>最低気温:{minTemperature}℃</h1>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default App;",{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","severity":1,"message":"46","line":57,"column":7,"nodeType":"47","endLine":57,"endColumn":47},{"ruleId":"41","replacedBy":"48"},{"ruleId":"43","replacedBy":"49"},{"ruleId":"50","severity":1,"message":"51","line":86,"column":40,"nodeType":"52","messageId":"53","endLine":86,"endColumn":42},{"ruleId":"50","severity":1,"message":"51","line":102,"column":40,"nodeType":"52","messageId":"53","endLine":102,"endColumn":42},{"ruleId":"50","severity":1,"message":"51","line":118,"column":40,"nodeType":"52","messageId":"53","endLine":118,"endColumn":42},{"ruleId":"54","severity":1,"message":"55","line":134,"column":38,"nodeType":"52","messageId":"56","endLine":134,"endColumn":39},{"ruleId":"50","severity":1,"message":"51","line":138,"column":47,"nodeType":"52","messageId":"53","endLine":138,"endColumn":49},{"ruleId":"50","severity":1,"message":"51","line":139,"column":44,"nodeType":"52","messageId":"53","endLine":139,"endColumn":46},"no-native-reassign",["57"],"no-negated-in-lhs",["58"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["57"],["58"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat","no-global-assign","no-unsafe-negation"]