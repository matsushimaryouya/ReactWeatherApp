{"version":3,"sources":["long.mp4","half.mp4","sun.mp4","clouds.mp4","rain.mp4","App.js","reportWebVitals.js","index.js"],"names":["App","React","useState","statusName","setName","statusWeather","setWeather","city","setCity","temperature","setTemp","maxTemperature","setMaxTemp","minTemperature","setMinTemp","closeNav","setCloseNav","useForm","register","handleSubmit","errors","formState","useEffect","axios","get","then","response","temp","parseInt","data","main","maxTemp","temp_max","minTemp","temp_min","console","log","name","weather","catch","err","navState","document","body","clientWidth","className","url","WomanHalfAnim","WomanLongAnim","controls","loop","config","file","attributes","autoPlay","muted","SunAnim","CloudsAnim","RainAnim","Button","onClick","onSubmit","exampleRequired","placeholder","required","type","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.8e32885e.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/long.1de7a703.mp4\";","export default __webpack_public_path__ + \"static/media/half.c5260164.mp4\";","export default __webpack_public_path__ + \"static/media/sun.d6161ad7.mp4\";","export default __webpack_public_path__ + \"static/media/clouds.46855c8c.mp4\";","export default __webpack_public_path__ + \"static/media/rain.3311e471.mp4\";","import './App.css';\nimport React from 'react';\nimport WomanLongAnim from './long.mp4'\nimport WomanHalfAnim from './half.mp4'\nimport SunAnim from './sun.mp4'\nimport CloudsAnim from './clouds.mp4'\nimport RainAnim from './rain.mp4'\nimport axios from 'axios';// axiosで通信を行う\nimport { useForm } from \"react-hook-form\";\nimport ReactPlayer from \"react-player\";\nimport Button from '@material-ui/core/Button';\nimport MenuOpenIcon from '@material-ui/icons/MenuOpen';\nimport CloseIcon from '@material-ui/icons/Close';\n\nfunction App() {\n  // apiの情報をstate管理\n  const [statusName, setName] = React.useState('');\n  const [statusWeather, setWeather] = React.useState('');\n  const [city, setCity] = React.useState('Tokyo');\n  const [temperature, setTemp] = React.useState();\n  const [maxTemperature, setMaxTemp] = React.useState();\n  const [minTemperature, setMinTemp] = React.useState();\n  const [closeNav, setCloseNav] = React.useState(false);\n  const topUrl = 'https://api.openweathermap.org/data/2.5/weather?q=';\n  const bottomUrl = ',jp&appid=ab772c4cd38076eff2acf4701e560be6';\n  // react-hook-form\n  const { register, handleSubmit, formState: { errors } } = useForm();\n  const onSubmit = data => {\n    setCity(data.exampleRequired);\n  }\n\n  // React.useEffect(() => { ... }, []);を入れることでaxiosの繰り返し処理を止めることができる\n  React.useEffect(() => {\n    // axios.get(URL)でapiからgetしてjsonを取得\n    axios.get(topUrl + city + bottomUrl)\n    // thenで成功した場合の処理をかける\n    .then(response => {\n      const temp = parseInt((response.data.main.temp - 273.15) * 10, 10) / 10;\n      const maxTemp = parseInt((response.data.main.temp_max - 273.15) * 10, 10) / 10;\n      const minTemp = parseInt((response.data.main.temp_min - 273.15) * 10, 10) / 10;\n      console.log(response.data.name);\n      setName(response.data.name);\n      setWeather(response.data.weather[0].main);\n      setTemp(temp);\n      setMaxTemp(maxTemp);\n      setMinTemp(minTemp);\n    }).catch(err => {\n      console.log('err:', err);\n    });\n  // 第二引数に[]を入れるとaxiosの繰り返し処理がなくなる\n  });\n\n  // サイドバーボタンの処理\n  const navClick = () => {\n    setCloseNav(!closeNav);\n  }\n  const navState = closeNav?'closeNav': 'openNav';\n\n  // レスポンシブ\n  React.useEffect(() => {\n    const windowSize = document.body.clientWidth;\n    if(windowSize <= 500){\n      setCloseNav(true);\n    }\n  }, []);\n\n  return (\n    <>\n      {/* woman animation */}\n      <div className=\"App\">\n        <h1 className={'cityName'}>{statusName}</h1>\n        {/* womanAnimation */}\n        <ReactPlayer\n        className=\"womanAnim\"\n        url={(maxTemperature >= 25)?WomanHalfAnim:WomanLongAnim}\n        controls={false}\n        loop\n        config={{ file: { attributes: {\n          autoPlay: true,\n          muted: true\n        }}}}\n      />\n\n        {/* clear effects */}\n        <div className={(statusWeather == 'Clear')?'fadeInEffect':' '}>\n          <ReactPlayer\n          className={'EffectAnim Clear'}\n          url={SunAnim}\n          controls={false}\n          loop\n          config={{ file: { attributes: {\n            autoPlay: true,\n            muted: true\n          }}}}\n          />\n        </div>\n\n        {/* clouds effects */}\n        <div className={(statusWeather == 'Clouds')?'fadeInEffect':' '}>       \n          <ReactPlayer\n          className={'EffectAnim Clouds'}\n          url={CloudsAnim}\n          controls={false}\n          loop\n          config={{ file: { attributes: {\n            autoPlay: true,\n            muted: true\n          }}}}\n          />\n        </div>\n\n        {/* rain effects */}\n        <div className={(statusWeather == 'Rain')?'fadeInEffect':' '}>\n          <ReactPlayer\n          className={'EffectAnim Rain'}\n          url={RainAnim}\n          controls={false}\n          loop\n          config={{ file: { attributes: {\n            autoPlay: true,\n            muted: true\n          }}}}\n          />\n        </div>\n\n        {/* サイドバー */}\n        <div className={\"weatherNav\" + ' ' + navState}>\n          <br></br>\n          <br></br>\n          <Button className={'btnStyle'} onClick={navClick}>\n            <MenuOpenIcon className={(navState=='openNav')? 'noneBtn': ' '}/>\n            <CloseIcon className={(navState=='closeNav')? 'noneBtn': ' '} />\n          </Button>\n            <p>日本の都市を検索できます。\n            <br></br>アルファベットでご入力ください。\n            </p>\n            <form onSubmit={handleSubmit(onSubmit)}>\n              {/* include validation with required or other standard HTML validation rules */}\n              <input className=\"inputTxt\" placeholder=\"例)Tokyo, Osaka etc..\" {...register(\"exampleRequired\", { required: true })} />\n              {/* errors will return when field validation fails  */}\n              <input className=\"btn-radius-solid\" type=\"submit\" />\n              {errors.exampleRequired && <p>フォームに入力されていません</p>}\n            </form>\n\n            <h1 className={statusName}>場所:{statusName}</h1>\n            <h1>天気:{statusWeather}</h1>\n            <h1>現在の気温:{temperature}℃</h1>\n            <h1>最高気温:{maxTemperature}℃</h1>\n            <h1>最低気温:{minTemperature}℃</h1>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}